:root {
  --container-padding: 20px;
  --input-padding-vertical: 6px;
  --input-padding-horizontal: 4px;
  --input-margin-vertical: 4px;
  --input-margin-horizontal: 0;
  --wave-grid-template-columns-repeat: 1;
  --wave-grid-template-rows-repeat: 1;
  --wave-cell-template-columns-repeat: 1;
  --segment-grid-columns: 8;
  --segment-grid-rows: 8;
}

body {
  padding: 0 var(--container-padding);
  color: var(--vscode-foreground);
  font-size: var(--vscode-font-size);
  font-weight: var(--vscode-font-weight);
  font-family: var(--vscode-font-family);
  background-color: var(--vscode-editor-background);
}

/* ol,
ul {
	padding-left: var(--container-padding);
}

body > *,
form > * {
	margin-block-start: var(--input-margin-vertical);
	margin-block-end: var(--input-margin-vertical);
}

*:focus {
	outline-color: var(--vscode-focusBorder) !important;
}

a {
	color: var(--vscode-textLink-foreground);
}

a:hover,
a:active {
	color: var(--vscode-textLink-activeForeground);
}

code {
	font-size: var(--vscode-editor-font-size);
	font-family: var(--vscode-editor-font-family);
}

button {
	border: none;
	padding: var(--input-padding-vertical) var(--input-padding-horizontal);
	width: 100%;
	text-align: center;
	outline: 1px solid transparent;
	outline-offset: 2px !important;
	color: var(--vscode-button-foreground);
	background: var(--vscode-button-background);
}

button:hover {
	cursor: pointer;
	background: var(--vscode-button-hoverBackground);
}

button:focus {
	outline-color: var(--vscode-focusBorder);
}

button.secondary {
	color: var(--vscode-button-secondaryForeground);
	background: var(--vscode-button-secondaryBackground);
}

button.secondary:hover {
	background: var(--vscode-button-secondaryHoverBackground);
}

input:not([type='checkbox']),
textarea {
	display: block;
	width: 100%;
	border: none;
	font-family: var(--vscode-font-family);
	padding: var(--input-padding-vertical) var(--input-padding-horizontal);
	color: var(--vscode-input-foreground);
	outline-color: var(--vscode-input-border);
	background-color: var(--vscode-input-background);
}

input::placeholder,
textarea::placeholder {
	color: var(--vscode-input-placeholderForeground);
}

    /* Previous styles remain the same until wave-segments */
/* .container {
      position: relative;
      width: 800px;
      height: 800px;
      margin: 60px auto;
      padding: 20px;
    }

    .wave-grid {
      width: 800px;
      height: 800px;
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(4, 1fr);
      border: 1px solid black;
    } */
.container {
  position: relative;
  width: 80%; /* Adjust width as a percentage of the viewport */
  max-width: 800px; /* Ensure it doesn't grow too large */
  height: auto; /* Let the height adjust based on content */
  margin: 60px auto;
  padding: 20px;
  box-sizing: border-box; /* Include padding in the width/height calculations */
}

.wave-grid {
  width: 100%; /* Take up the full width of the container */
  height: 0;
  display: grid;
  grid-template-columns: repeat(var(--wave-grid-template-columns-repeat), 1fr);
  grid-template-rows: repeat(var(--wave-grid-template-rows-repeat), 1fr);
  border: 1px solid black;
  box-sizing: border-box; /* Include border in the element's box model */
}
.wave-block {
  border: 1px solid black;
  display: flex;
  flex-direction: column;
  height: 400px; /* Fixed height */
}

.wave-cell {
  position: relative;
  flex: 1;
  display: grid;
  grid-template-columns: repeat(var(--wave-cell-template-columns-repeat), 1fr);
  box-sizing: border-box; /* Include border in the element's box model */
  border-bottom: 1px solid black;
}

.wave-cell:last-child {
  border-bottom: none;
}

.wave-label {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
  font-size: 16px;
}

/* Updated wave-segments styling */
.wave-segments {
  position: absolute;
  inset: 0;
  display: grid;
  grid-template-columns: repeat(
    var(--wave-segments-template-columns-repeat),
    1fr
  );
}

.wave-segment {
  border-right: 1px solid #666;
  position: relative;
}

.wave-segment:last-child {
  border-right: none;
}

.wave-segment.filled {
  background-color: #bfdbfe;
}

/* New inner grid styling for filled segments */
.wave-segment.filled::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(red, red) 0 0 /
      calc(100% / var(--segment-grid-columns))
      calc(100% / var(--segment-grid-rows)),
    /* Vertical grid lines */
      linear-gradient(to right, #666 1px, transparent 1px) 0 0 /
      calc(100% / var(--segment-grid-columns)) 100%,
    /* Horizontal grid lines */
      linear-gradient(to bottom, #666 1px, transparent 1px) 0 0 / 100%
      calc(100% / var(--segment-grid-rows));
  background-repeat: no-repeat, repeat, repeat;
}

.red-indicator {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: red;
  z-index: 2;
}

.k-label {
  position: absolute;
  top: -30px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 16px;
}

.m-label {
  position: absolute;
  left: -30px;
  top: 50%;
  transform: translateY(-50%) rotate(-90deg);
  transform-origin: center;
  font-size: 16px;
}

.t0-container {
  position: absolute;
  top: -30px;
  left: 0;
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 16px;
}

.t0-grid {
  width: 80px;
  height: 20px;
  border: 1px solid black;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
}

.t0-segment {
  border-right: 1px solid black;
}

.t0-segment:last-child {
  border-right: none;
}
